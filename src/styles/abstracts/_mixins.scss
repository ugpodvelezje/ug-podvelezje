@use 'variables' as vars;
@use 'sass:color';

// Media query mixins - mobile-first approach
@mixin respond-to($breakpoint) {
  @if $breakpoint == sm {
    @media (min-width: vars.$breakpoint-sm) { @content; }
  } @else if $breakpoint == md {
    @media (min-width: vars.$breakpoint-md) { @content; }
  } @else if $breakpoint == lg {
    @media (min-width: vars.$breakpoint-lg) { @content; }
  } @else if $breakpoint == xl {
    @media (min-width: vars.$breakpoint-xl) { @content; }
  }
}

// Flexbox mixins
@mixin flex($direction: row, $justify: flex-start, $align: flex-start, $wrap: nowrap) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
  flex-wrap: $wrap;
}

@mixin flex-center {
  display: flex;
  justify-content: center;
  align-items: center;
}

// Typography mixins
@mixin font-primary {
  font-family: vars.$font-family-primary;
}

@mixin font-secondary {
  font-family: vars.$font-family-secondary;
}

// Button mixins
@mixin button-primary {
  background-color: vars.$primary-color;
  color: vars.$light-color;
  border: none;
  padding: vars.$spacing-sm vars.$spacing-lg;
  border-radius: vars.$border-radius-sm;
  cursor: pointer;
  transition: background-color vars.$transition-medium;
  
  &:hover {
    background-color: color.adjust(vars.$primary-color, $lightness: -10%);
  }
}

@mixin button-secondary {
  background-color: vars.$secondary-color;
  color: vars.$primary-color;
  border: none;
  padding: vars.$spacing-sm vars.$spacing-lg;
  border-radius: vars.$border-radius-sm;
  cursor: pointer;
  transition: background-color vars.$transition-medium;
  
  &:hover {
    background-color: color.adjust(vars.$secondary-color, $lightness: -10%);
  }
}

// Shadows and elevations
@mixin shadow-sm {
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);
}

@mixin shadow-md {
  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);
}

@mixin shadow-lg {
  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);
}

// Transitions
@mixin transition($property: all, $duration: vars.$transition-medium) {
  transition: $property $duration;
} 