@use '../../../styles/abstracts' as abstracts;

.hero {
  position: relative;
  width: 100vw;
  height: 100vh;
  overflow: hidden;
  margin: 0;
  padding: 0;
  left: 0;
  top: 0;
  
  // Background with image
  &__background {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-size: cover;
    background-position: center;
    transition: opacity abstracts.$transition-slow;
    z-index: 1;
    
    // Dark overlay over image
    &::after {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: rgba(0, 0, 0, 0.6);
      z-index: 2;
    }
    
    // Fading animation
    &--fading {
      opacity: 0;
    }
  }
  
  // Content container
  &__content {
    position: relative;
    width: 100%;
    height: 100%;
    z-index: 3;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    padding: 0;
  }
  
  &__content-wrapper {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    max-width: 1000px;
    width: 90%;
  }
  
  // Title
  &__title {
    @include abstracts.font-secondary;
    font-size: calc(abstracts.$font-size-xxl * 1.2);
    font-weight: 700;
    margin-bottom: abstracts.$spacing-xl;
    color: abstracts.$light-color;
    text-align: center;
    text-shadow: 0 0 10px rgba(0, 0, 0, 0.7);
    
    @include abstracts.respond-to(sm) {
      font-size: calc(abstracts.$font-size-xxl * 1.4);
    }
    
    @include abstracts.respond-to(md) {
      font-size: abstracts.$font-size-hero;
    }
  }
  
  // Text container
  &__text-container {
    text-align: center;
    width: 100%;
    max-width: 800px;
    padding: abstracts.$spacing-lg;
    background-color: rgba(abstracts.$primary-color, 0.7);
    border-radius: abstracts.$border-radius-sm;
    backdrop-filter: blur(8px);
    color: abstracts.$light-color;
    @include abstracts.shadow-md;
    margin-bottom: abstracts.$spacing-xl;
    
    // Apply scale animation
    animation: scale-in 0.5s ease-out;
    
    @keyframes scale-in {
      0% {
        transform: scale(0.9);
        opacity: 0;
      }
      100% {
        transform: scale(1);
        opacity: 1;
      }
    }
    
    @include abstracts.respond-to(sm) {
      padding: abstracts.$spacing-xl;
    }
  }
  
  // Subtitle
  &__subtitle {
    font-size: abstracts.$font-size-lg;
    font-weight: 500;
    color: abstracts.$light-color;
    text-align: center;
    margin-bottom: abstracts.$spacing-xl;
    text-shadow: 0 0 10px rgba(0, 0, 0, 0.7);
    position: relative;
    padding-bottom: abstracts.$spacing-md;
    
    &::after {
      content: '';
      position: absolute;
      bottom: 0;
      left: 50%;
      transform: translateX(-50%);
      width: 80px;
      height: 3px;
      background: linear-gradient(to right, abstracts.$secondary-color, abstracts.$primary-color);
      border-radius: 2px;
    }
    
    @include abstracts.respond-to(sm) {
      font-size: abstracts.$font-size-xl;
      padding-bottom: abstracts.$spacing-lg;
      
      &::after {
        width: 120px;
      }
    }
  }
  
  // Button container
  &__button-container {
    margin-top: abstracts.$spacing-lg;
  }
  
  // Call to action button
  &__cta-button {
    @include abstracts.button-secondary;
    padding: abstracts.$spacing-sm abstracts.$spacing-xl;
    font-weight: 700;
    border-radius: abstracts.$border-radius-md;
    text-transform: uppercase;
    letter-spacing: 1px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1), 0 1px 3px rgba(0, 0, 0, 0.1);
    font-size: abstracts.$font-size-md;
    
    &:hover {
      transform: translateY(-2px);
      box-shadow: 0 7px 14px rgba(0, 0, 0, 0.1), 0 3px 6px rgba(0, 0, 0, 0.1);
    }
    
    &.bounce {
      animation: bounce 2s infinite;
    }
    
    @keyframes bounce {
      0%, 20%, 50%, 80%, 100% {
        transform: translateY(0);
      }
      40% {
        transform: translateY(-20px);
      }
      60% {
        transform: translateY(-10px);
      }
    }
    
    @include abstracts.respond-to(sm) {
      padding: abstracts.$spacing-md abstracts.$spacing-xxl;
      font-size: abstracts.$font-size-lg;
    }
  }
  
  // Controls container
  &__controls {
    position: absolute;
    bottom: abstracts.$spacing-lg;
    left: 0;
    width: 100%;
    z-index: 4;
    @include abstracts.flex(row, center, center);
    padding: 0 abstracts.$spacing-md;
  }
  
  // Control buttons (prev/next)
  &__control {
    width: 40px;
    height: 40px;
    border-radius: 50%;
    background-color: rgba(abstracts.$primary-color, 0.7);
    color: abstracts.$light-color;
    @include abstracts.flex-center;
    transition: all abstracts.$transition-medium;
    margin: 0 abstracts.$spacing-md;
    
    &:hover {
      background-color: abstracts.$primary-color;
      transform: scale(1.1);
    }
    
    &-icon {
      font-size: abstracts.$font-size-lg;
    }
  }
  
  // Indicators container
  &__indicators {
    @include abstracts.flex(row, center, center);
    gap: abstracts.$spacing-sm;
  }
  
  // Individual indicators
  &__indicator {
    width: 12px;
    height: 12px;
    border-radius: 50%;
    background-color: rgba(abstracts.$light-color, 0.5);
    transition: all abstracts.$transition-medium;
    
    &:hover {
      background-color: rgba(abstracts.$light-color, 0.8);
    }
    
    &--active {
      background-color: abstracts.$secondary-color;
      transform: scale(1.2);
    }
    
    @include abstracts.respond-to(md) {
      width: 14px;
      height: 14px;
    }
  }
}
